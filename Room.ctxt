#BlueJ class context
comment0.target=Room
comment0.text=\r\n\ Class\ Room\ -\ a\ room\ in\ an\ adventure\ game.\ \ \r\n\r\n\ A\ "Room"\ represents\ one\ location\ in\ the\ scenery\ of\ the\ game.\ \ It\ is\ \r\n\ connected\ to\ other\ rooms\ via\ exits.\ \ For\ each\ existing\ exit,\ the\ room\ \r\n\ stores\ a\ reference\ to\ the\ neighbouring\ room.\r\n\ \r\n\ @author\ Chris\ Edgley\ &\ Phill\ Horrocks\r\n\ @version\ 23.1.21\r\n
comment1.params=id\ name
comment1.target=Room(int,\ java.lang.String)
comment1.text=\r\n\ This\ allows\ the\ creation\ of\ a\ room.\r\n\ Initially\ wiht\ no\ name\ or\ exits,\r\n\ this\ data\ is\ filled\ elsewhere.\r\n\ \r\n\ @param\ name\ The\ room's\ name.\r\n
comment10.params=
comment10.target=java.lang.String\ getDescription()
comment10.text=\r\n\ This\ allows\ the\ game\ to\ get\ the\ saved\ description\r\n\ for\ your\ room\r\n
comment11.params=item\ itemDescription
comment11.target=void\ setItem(ItemTypes,\ java.lang.String)
comment11.text=\r\n\ This\ allows\ the\ game\ to\ set\ an\ item\r\n\ for\ the\ user\ to\ interact\ with\r\n
comment12.params=
comment12.target=ItemTypes\ getItem()
comment12.text=\r\n\ This\ allows\ the\ game\ to\ put\ an\ item\ into\ the\ user's\r\n\ inventory\r\n
comment13.params=
comment13.target=void\ removeItem()
comment13.text=\r\n\ This\ allows\ the\ game\ to\ put\ an\ item\ into\ the\ user's\r\n\ inventory\r\n
comment14.params=
comment14.target=void\ setOxygen()
comment14.text=\r\n\ This\ allows\ a\ room\ to\ have\ an\ oxygen\ tank\r\n
comment15.params=
comment15.target=boolean\ hasOxygen()
comment15.text=\r\n\ This\ checks\ to\ see\ if\ the\ room\ has\ any\ oxygen\r\n\ in\ it\r\n
comment2.params=
comment2.target=int\ getID()
comment2.text=\r\n\ This\ allows\ the\ game\ to\ get\ the\r\n\ room's\ ID\ in\ the\ app.\r\n
comment3.params=direction\ neighbor
comment3.target=void\ setExit(java.lang.String,\ Room)
comment3.text=\r\n\ This\ allows\ us\ to\ define\ how\ an\ exit\ is\ made\r\n\ \r\n\ @param\ direction\ The\ direction\ of\ the\ exit.\r\n\ @param\ neighbor\ \ The\ room\ to\ which\ the\ exit\ leads.\r\n
comment4.params=
comment4.target=java.lang.String\ getShortDescription()
comment4.text=\r\n\ This\ allows\ the\ game\ to\ get\ the\ short\ descrption\ written\r\n\ about\ a\ room\r\n
comment5.params=
comment5.target=java.lang.String\ getLongDescription()
comment5.text=\r\n\ Return\ a\ long\ description\ of\ the\ room\ in\ the\ form\:\r\n\ \r\n\ \ \ \ \ Exits\:\ north\ west\r\n\ @return\ A\ long\ description\ of\ this\ room\r\n
comment6.params=
comment6.target=java.lang.String\ getExitString()
comment6.text=\r\n\ Return\ a\ string\ describing\ the\ room's\ exits,\ for\ example\r\n\ "Exits\:\ north\ west".\r\n\ @return\ Details\ of\ the\ room's\ exits.\r\n
comment7.params=direction
comment7.target=Room\ getExit(java.lang.String)
comment7.text=\r\n\ Return\ the\ room\ that\ is\ reached\ if\ we\ go\ from\ this\ room\ in\ direction\r\n\ "direction".\ If\ there\ is\ no\ room\ in\ that\ direction,\ return\ null.\r\n\ @param\ direction\ The\ exit's\ direction.\r\n\ @return\ The\ room\ in\ the\ given\ direction.\r\n
comment8.params=
comment8.target=java.lang.String\ getName()
comment8.text=\r\n\ This\ allows\ the\ game\ to\ be\ able\ to\ \r\n\ get\ the\ name\ of\ the\ rooms\r\n
comment9.params=description
comment9.target=void\ setDescription(java.lang.String)
comment9.text=\r\n\ This\ allows\ the\ game\ to\ set\ a\ description\r\n\ for\ each\ room\r\n
numComments=16
